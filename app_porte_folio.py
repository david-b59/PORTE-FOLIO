import streamlit as st
import pandas as pd
import numpy as np
from st_on_hover_tabs import on_hover_tabs
from pathlib import Path
import base64
from PIL import Image
import requests
from io import BytesIO


st.set_page_config(layout="wide")



# Convertir l'image locale en base64
image_path = Path("image-background.png")
if image_path.is_file():
    with open(image_path, "rb") as img_file:
        img_base64 = base64.b64encode(img_file.read()).decode()
else:
    st.error(f"L'image '{image_path.name}' est introuvable dans le dossier : {image_path.parent}")

# CSS avec image de fond en base64
css = f'''
<style>

    .stApp {{
        background-image: url("data:image/png;base64,{img_base64}");
        background-size: cover;
        background-attachment: fixed;
        background-repeat: no-repeat;
        background-position: center;
        
    }}

    section[data-testid='stSidebar'] {{
        background-color: #111;
        min-width: unset !important;
        width: unset !important;
        flex-shrink: unset !important;
    }}

    button[kind="header"] {{
        background-color: transparent;
        color: rgb(180, 167, 141);
    }}

    @media(hover) {{
        header[data-testid="stHeader"] {{
            display: none;
        }}

        section[data-testid='stSidebar'] > div {{
            
            width: 100px;
            position: relative;
            z-index: 1;
            top: 0;
            left: 0;
            background-color: #111;
            overflow-x: hidden;
            transition: 0.5s ease;
            padding-top: 60px;
            white-space: nowrap;
        }}

        section[data-testid='stSidebar'] > div:hover {{
            width: 250px;
          
        }}

        button[kind="header"] {{
            display: none;
        }}
    }}

    button, 
    .stButton button, 
    .stDownloadButton button, 
    .st-emotion-cache button {{  
        color: white !important;  /* Texte blanc pour contraste */
        background: linear-gradient(135deg, #2C3E50, #4CA1AF) !important; /* D√©grad√© bleu-gris pro */
        border: 2px solid #1B2A41 !important; /* Bordure gris fonc√© */
        padding: 12px 18px !important; /* Agrandir les boutons */
        border-radius: 8px !important; /* Coins arrondis */
        font-size: 16px !important; /* Texte lisible */
        font-weight: bold !important; /* Texte en gras */
        cursor: pointer !important; /* Curseur interactif */
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3) !important; /* Ombre pour effet 3D */
        transition: all 0.3s ease-in-out !important; /* Animation fluide */
    }}
    /* Ajuster les boutons au survol */
    button:hover, 
    .stButton button:hover, 
    .stDownloadButton button:hover, 
    .st-emotion-cache button:hover {{  
        background: linear-gradient(135deg, #1B2A41, #3B6978) !important; /* D√©grad√© plus fonc√© au survol */
        transform: scale(1.07) !important; /* Effet zoom l√©ger */
        border-color: #16222A !important;
    }}
    
    
    /* S'assurer que la lisibilit√© est bonne sur mobile */
    @media (max-width: 768px) {{
        h1, h2, h3, h4, h5, h6, div, p, span {{
            color: black !important;
        }}
        /* R√©tablir la couleur d'origine pour les boutons */
    button, 
    .stButton button, 
    .stDownloadButton button, 
    .st-emotion-cache button {{  
        color: white !important;  /* Texte blanc pour contraste */
        background: linear-gradient(135deg, #2C3E50, #4CA1AF) !important; /* D√©grad√© bleu-gris pro */
        border: 2px solid #1B2A41 !important; /* Bordure gris fonc√© */
        padding: 12px 18px !important; /* Agrandir les boutons */
        border-radius: 8px !important; /* Coins arrondis */
        font-size: 16px !important; /* Texte lisible */
        font-weight: bold !important; /* Texte en gras */
        cursor: pointer !important; /* Curseur interactif */
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3) !important; /* Ombre pour effet 3D */
        transition: all 0.3s ease-in-out !important; /* Animation fluide */
    }}
    /* Ajuster les boutons au survol */
    button:hover, 
    .stButton button:hover, 
    .stDownloadButton button:hover, 
    .st-emotion-cache button:hover {{  
        background: linear-gradient(135deg, #1B2A41, #3B6978) !important; /* D√©grad√© plus fonc√© au survol */
        transform: scale(1.07) !important; /* Effet zoom l√©ger */
        border-color: #16222A !important;
    }}

    /* R√©tablir l'affichage normal des ic√¥nes et fl√®ches */
    .st-emotion-cache svg,  
    .st-emotion-cache i {{
        color: white !important;  
    }}

    /* Corriger les blocs de code (code copier-coller) */
    pre, code , code span{{
        color: #00ff00 !important;  /* Texte vert clair */
        background-color: #2a2a2a !important; /* Fond gris fonc√© */
        font-family: 'Courier New', Courier, monospace !important;
        padding: 12px !important;
        border-radius: 6px !important;
        display: block !important;
        overflow-x: auto !important;  /* Permettre le scroll horizontal */
        white-space: pre-wrap !important;  /* Emp√™cher le d√©bordement */
        word-wrap: break-word !important;  /* Permettre la coupure des mots */
    }}
    }}
    
    @media(max-width: 272px) {{
        section[data-testid='stSidebar'] > div {{
            width: 10rem;
        }}

    }}

    /* Ajouter une image de fond */
</style>
'''
st.markdown(css, unsafe_allow_html=True)


# Barre lat√©rale avec menu interactif
with st.sidebar:
    tabs = on_hover_tabs(
        tabName=['Pr√©sentation', 'CV', 'Projets'],
        iconName=['description', 'person', 'folder'],
        default_choice=0
    )

# Contenu affich√© selon le choix du menu
if tabs == 'Pr√©sentation':
    st.header("Pr√©sentation")
    st.write("Bienvenue sur mon portfolio ! Ici, vous pouvez explorer mes comp√©tences et projets.")

    # CSS personnalis√© pour le style
    st.markdown(
        """
        <style>
        .title {
            font-size: 2.5em;
            font-weight: bold;
            color: #2c3e50;
            text-align: center;
            margin-bottom: 20px;
        }
        .subtitle {
            font-size: 1.5em;
            font-weight: bold;
            color: #34495e;
            margin-top: 20px;
        }
        .text {
            font-size: 1.2em;
            line-height: 1.6;
            text-align: justify;
        }
        .icon {
            display: flex;
            align-items: center;
            gap: 10px;
            font-size: 1.2em;
        }
        .social-icons a {
            text-decoration: none;
            font-size: 1.2em;
            margin-right: 15px;
            color: #0077b5; /* Couleur par d√©faut (bleu LinkedIn) */
        }
        .social-icons a.github {
            color: #333; /* Couleur pour GitHub (noir) */
        }
        .footer {
            margin-top: 30px;
            text-align: center;
            color: #888888;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

    # Titre principal
    st.markdown('<div class="title">Pr√©sentation de David Bauduin</div>', unsafe_allow_html=True)

    # Section "√Ä propos de moi"
    st.markdown('<div class="subtitle">√Ä propos de moi</div>', unsafe_allow_html=True)
    st.markdown(
        """
        <div class="text">
        Je m'appelle <b>David Bauduin</b> et je suis <b>Data Analyst</b>, passionn√© par l‚Äôunivers de la donn√©e.
        Mon parcours a d√©but√© en autodidacte, explorant les fondamentaux du d√©veloppement
        (<b>HTML, CSS, JavaScript, SQL et Python</b>), avant de consolider mes comp√©tences √† travers
        une formation sp√©cialis√©e en Data Analysis √† la <b>Wild Code School</b>.
        </div>
        """,
        unsafe_allow_html=True,
    )

    # Section "Comp√©tences Techniques"
    st.markdown('<div class="subtitle">Comp√©tences Techniques</div>', unsafe_allow_html=True)
st.markdown(
    """
    <div class="icon">üíª <b>D√©veloppement Web</b> : HTML, CSS, JavaScript pour cr√©er des interfaces interactives et responsives.</div>
    <div class="icon">üóÑÔ∏è <b>Gestion des Bases de Donn√©es</b> : SQL et MySQL pour l‚Äôextraction, la manipulation et la s√©curisation des donn√©es.</div>
    <div class="icon">üêç <b>Analyse de Donn√©es & Automatisation</b> : Python, R (notions) et Git pour le traitement, l‚Äôanalyse et l‚Äôautomatisation des flux de donn√©es.</div>
    <div class="icon">üìä <b>Biblioth√®ques & DataViz</b> : Numpy, Pandas, Matplotlib, Seaborn, Plotly et Streamlit pour la visualisation et l‚Äôinterpr√©tation des donn√©es.</div>
    <div class="icon">ü§ñ <b>Machine Learning & IA</b> : R√©gressions, classifications, clustering non supervis√©, NLP et int√©gration de chatbots (LLM) pour des solutions pr√©dictives et interactives.</div>
    <div class="icon">üîç <b>Techniques d‚ÄôInt√©gration</b> : Webscrapping, API Rest, Geocodage et m√©thodes ELT/ETL pour collecter et int√©grer des donn√©es provenant de multiples sources.</div>
    <div class="icon">‚òÅÔ∏è <b>Cloud & DevOps</b> : Docker, dbt, AWS et Notion Cloud pour le d√©ploiement, la gestion d‚Äôinfrastructures et l‚Äôautomatisation des workflows.</div>
    <div class="icon">‚öôÔ∏è <b>Outils & M√©thodologies</b> : PowerBI, Looker Studio, Dax et Agile pour la cr√©ation de dashboards, la gestion de projets et l‚Äôoptimisation des processus analytiques.</div>
    """,
    unsafe_allow_html=True,
)

    # Section "Qualit√©s Personnelles"
    st.markdown('<div class="subtitle">Qualit√©s Personnelles</div>', unsafe_allow_html=True)
    st.markdown(
        """
        <div class="text">
        - <b>Curieux</b> : Toujours en qu√™te d'apprentissage.<br>
        - <b>Pers√©v√©rant</b> : Je ne l√¢che rien face aux d√©fis.<br>
        - <b>Perfectionniste</b> : J'aime soigner les d√©tails pour garantir des r√©sultats de qualit√©.
        </div>
        """,
        unsafe_allow_html=True,
    )

    # Section "Formation"
    st.markdown('<div class="subtitle">Formation</div>', unsafe_allow_html=True)
    st.markdown(
        """
        <div class="text">
        J'ai suivi une formation en Data Analysis √† la <b>Wild Code School</b>, avec une sp√©cialisation
        en <b>Intelligence Artificielle</b> et <b>Machine Learning</b>.
        </div>
        """,
        unsafe_allow_html=True,
    )

    # Section "Passions"
    st.markdown('<div class="subtitle">Passions</div>', unsafe_allow_html=True)
    st.markdown(
        """
        <div class="text">
        Toujours en qu√™te d'innovation, j'aime relever de nouveaux d√©fis et transformer
        les donn√©es en solutions concr√®tes et impactantes.
        </div>
        """,
        unsafe_allow_html=True,
    )

    # Section "R√©seaux Sociaux"
    st.markdown('<div class="subtitle">R√©seaux Sociaux</div>', unsafe_allow_html=True)
    st.markdown(
        """
        <div class="social-icons">
            <a href="https://www.linkedin.com/in/david-bauduin-2540a4334/" target="_blank">üîó LinkedIn</a>
            <a href="https://github.com/david-b59/PROJECTS" target="_blank" class="github">üêô GitHub</a>
        </div>
        """,
        unsafe_allow_html=True,
    )

    # Footer
    st.markdown(
        """
        <div class="footer">
        Cr√©√© par David Bauduin
        </div>
        """,
        unsafe_allow_html=True,
    )



# Ajouter une section pour l'onglet CV
elif tabs == 'CV':

    # CSS pour personnaliser l'interface
    st.markdown("""
        <style>
            .title {
                font-size: 36px;
                font-weight: bold;
                text-align: center;
                color: #2c3e50;
            }
            .subtitle {
                font-size: 20px;
                color: #34495e;
                text-align: center;
                margin-bottom: 20px;
            }
            .pdf-viewer {
                margin: 20px auto;
                display: flex;
                justify-content: center;
            }
        </style>
    """, unsafe_allow_html=True)

    # Titre et sous-titre
    st.markdown('<h1 class="title">üìÑ Mon CV</h1>', unsafe_allow_html=True)
    st.markdown('<p class="subtitle">Consultez mon CV directement ou t√©l√©chargez-le !</p>', unsafe_allow_html=True)

    # Bouton pour t√©l√©charger le CV
    st.markdown(f"üì• [T√©l√©charger mon CV](https://github.com/david-b59/PORTE-FOLIO/raw/main/CV_David_Bauduin_23022025.pdf)")

    st.image("https://david-b59.github.io/PORTE-FOLIO/CV_image.PNG")

           



elif tabs == 'Projets':
    st.header("Projets")
    st.write("D√©couvrez mes projets r√©alis√©s.")
    
    # Cr√©er des colonnes pour les boutons
    col1, col2, col3, col4 = st.columns(4)

    # Ajouter des boutons dans chaque colonne
    with col1:
        button_toys = st.button("Toys and Models - Dashboard", key="toys_button")
    with col2:
        button_telecom = st.button("telecom-attrition - dashboard", key="telecom_button")
    with col3:
        button_cyclistique = st.button("Cyclistique - dashboard", key="Cyclistique_button")
    with col4:
        button_cinema = st.button("Project Recommandation Cinema", key="cinema_button")

    # Initialisation de l'√©tat du projet s√©lectionn√© dans st.session_state
    if "selected_project" not in st.session_state:
        st.session_state["selected_project"] = None

    # V√©rifier lequel des boutons a √©t√© cliqu√© et mettre √† jour l'√©tat
    if button_toys:
        st.session_state["selected_project"] = "toys"
    elif button_telecom:
        st.session_state["selected_project"] = "telecom"
    elif button_cyclistique:
        st.session_state["selected_project"] = "cyclistique"
    elif button_cinema:
        st.session_state["selected_project"] = "cinema"

    # V√©rification du projet s√©lectionn√©
    if st.session_state["selected_project"] == "toys":
        # Affichage du contenu du projet
        st.write("Projet choisi : Toys and Models - Dashboard")

        # Couleurs et style CSS
        st.markdown(
            """
            <style>
            .title {
                font-size: 2rem;
                color: #3B3B98;
                font-weight: bold;
                text-align: center;
                margin-bottom: 20px;
            }
            .section-title {
                font-size: 1.5rem;
                color: #182C61;
                font-weight: bold;
                margin-bottom: 10px;
                margin-top: 30px;
            }
            .description {
                font-size: 1rem;
                color: #333333;
                text-align: justify;
                margin-bottom: 20px;
            }
            .highlight {
                color: #40739E;
                font-weight: bold;
            }
            </style>
            """, 
            unsafe_allow_html=True
        )

        # Titre principal
        st.markdown('<div class="title">üèéÔ∏è Toys and Models Dashboard</div>', unsafe_allow_html=True)

        # Description du projet
        st.markdown('<div class="description">Une entreprise sp√©cialis√©e dans la vente de mod√®les et maquettes...</div>', unsafe_allow_html=True)

        # KPI, Fonctionnalit√©s cl√©s, et autres sections...
        st.markdown('<div class="section-title">üìä Les KPI Suivis :</div>', unsafe_allow_html=True)
        st.markdown("""
            - **Ventes** :  
                - Nombre de produits vendus par cat√©gorie et par mois.  
                - Comparaison avec le m√™me mois de l'ann√©e pr√©c√©dente et taux de variation.
            - **Finances** :  
                - Chiffre d'affaires des commandes des deux derniers mois par pays.
            - **Logistique** :  
                - Suivi du stock des 5 produits les plus command√©s.
            - **Ressources Humaines** :  
                - Chaque mois, les 2 vendeurs ayant r√©alis√© le plus de chiffres d'affaires.
            """, unsafe_allow_html=True)

        # Fonctionnalit√©s et organisation du projet
        st.markdown('<div class="section-title">‚öôÔ∏è Fonctionnalit√©s cl√©s :</div>', unsafe_allow_html=True)
        st.markdown("""
            - Analyse des KPI principaux avec **SQL**.  
            - Cr√©ation d‚Äôun tableau de bord interactif avec **Power BI**.  
            - Actualisation quotidienne des donn√©es pour une gestion dynamique.
            """, unsafe_allow_html=True)

        # Organisation des fichiers
        st.markdown('<div class="section-title">üóÇÔ∏è Organisation des Fichiers :</div>', unsafe_allow_html=True)
        st.markdown("""
            - **Documentation** :  
                - [Project instructions](https://github.com/david-b59/PROJECTS/blob/main/toys-and-models-dashboard/documentation/project_instructions.pdf)  
                - [Slides pr√©sentation](https://github.com/david-b59/PROJECTS/blob/main/toys-and-models-dashboard/documentation/slides_pr%C3%A9sentation.pdf)  
            - **Requ√™tes SQL** :  
                - [Fichiers SQL](https://github.com/david-b59/PROJECTS/blob/main/toys-and-models-dashboard/queries/kpi_queries.sql)  
            - **Dashboard Power BI** :  
                - [Fichier Power BI](https://github.com/david-b59/PROJECTS/blob/main/toys-and-models-dashboard/power_bi/Projet%201.pbix)  
                - [Screenshots du Dashboard](https://github.com/david-b59/PROJECTS/tree/main/toys-and-models-dashboard/power_bi/screenshots)  
        """, unsafe_allow_html=True)

        # Instructions d'utilisation
        st.markdown('<div class="section-title">üìñ Comment utiliser ce projet ?</div>', unsafe_allow_html=True)
        st.markdown("""
            - **√âtape 1** : Installez et ouvrez les outils requis :  
                - [MySQL Workbench](https://dev.mysql.com/downloads/workbench/) ou un autre SGBD pour lire les fichiers SQL.  
                - [Power BI Desktop](https://powerbi.microsoft.com/) pour explorer et interagir avec le tableau de bord.  
            - **√âtape 2** :  
                - Lisez et ex√©cutez les requ√™tes SQL pour analyser les KPI.  
                - Ouvrez le fichier Power BI pour visualiser les indicateurs.
        """, unsafe_allow_html=True)

        # ------------------ Ajout d'un titre pour les slides ------------------
        st.markdown("<div class='section-title'>üé• D√©couvrez les slides du projet</div>", unsafe_allow_html=True)
        
        # ------------------ Diaporama des images ------------------

        # URL de base pour les images sur GitHub
        repo_url = "https://raw.githubusercontent.com/david-b59/PROJECTS/main/toys-and-models-dashboard/power_bi/screenshots/"
        
        # Liste des noms de tes fichiers
        image_paths = [f"screenshot{i}.png" for i in range(1, 19)]
        
        # Fonction pour charger les images depuis GitHub
        @st.cache_data
        def load_images(image_paths):
            images = []
            for image_name in image_paths:
                image_url = f"{repo_url}{image_name}"
                response = requests.get(image_url)
                if response.status_code == 200:
                    try:
                        img = Image.open(BytesIO(response.content))
                        images.append(img)
                    except Exception as e:
                        st.warning(f"Erreur lors du chargement de l'image {image_name}: {e}")
                else:
                    st.warning(f"Impossible de charger l'image {image_name} (HTTP {response.status_code})")
            return images
        
        # Charger toutes les images
        images = load_images(image_paths)
        
        # V√©rifier si des images sont charg√©es
        if not images:
            st.error("Aucune image valide n'a pu √™tre charg√©e.")
        else:
            # Initialisation de l'index dans st.session_state
            if "index" not in st.session_state:
                st.session_state.index = 0

            # Cr√©er des boutons pour naviguer
            col1, col2, col3 = st.columns([1, 3, 1])
            with col1:
                if st.button("‚¨ÖÔ∏è Pr√©c√©dent"):
                    st.session_state.index = (st.session_state.index - 1) % len(images)
            with col3:
                if st.button("‚û°Ô∏è Suivant"):
                    st.session_state.index = (st.session_state.index + 1) % len(images)
        
            # Afficher l'image actuelle
            index = st.session_state.index
            st.image(images[index], caption=f"Image {index + 1}", use_container_width=True)



    


        # Footer
        st.markdown(
            """
            <hr>
            <div style="text-align: center; color: #182C61; font-size: 0.9rem;">
                R√©alis√© par [Bauduin David].  
            </div>
            """,
            unsafe_allow_html=True
        )

    elif st.session_state["selected_project"] == "telecom":

        # Affichage du projet
        st.write("Projet choisi : Dashboard Business Case ‚Äì Churn dans les T√©l√©coms")
        
        # Couleurs et style CSS
        st.markdown(
            """
            <style>
            .title {
                font-size: 2rem;
                color: #3B3B98;
                font-weight: bold;
                text-align: center;
                margin-bottom: 20px;
            }
            .section-title {
                font-size: 1.5rem;
                color: #182C61;
                font-weight: bold;
                margin-bottom: 10px;
                margin-top: 30px;
            }
            .description {
                font-size: 1rem;
                color: #333333;
                text-align: justify;
                margin-bottom: 20px;
            }
            .highlight {
                color: #40739E;
                font-weight: bold;
            }
            </style>
            """, 
            unsafe_allow_html=True
        )
        
        # Titre principal
        st.markdown('<div class="title">üìä Dashboard Business Case ‚Äì Churn dans les T√©l√©coms</div>', unsafe_allow_html=True)
        
        # Description du projet
        st.markdown('<div class="description">Ce dashboard interactif a √©t√© r√©alis√© en une journ√©e dans le cadre d‚Äôun d√©fi interne. Il traite du churn (r√©siliation) dans le secteur des t√©l√©coms pour le client Pinky, qui souhaite identifier les clients √† risque afin de pr√©venir leur r√©siliation.</div>', unsafe_allow_html=True)
        
        # Contenu du Dashboard
        st.markdown('<div class="section-title">üìä Contenu du Dashboard :</div>', unsafe_allow_html=True)
        st.markdown("""
        - **Exploration des donn√©es** :  
            - Analyse descriptive des variables et identification des facteurs influen√ßant la r√©siliation.
        - **Visualisations interactives** :  
            - Graphiques clairs et intuitifs pour visualiser les tendances et comparer les comportements clients.
        - **Mod√©lisation du churn** :  
            - Proposition d‚Äôun scoring pour identifier les clients √† risque, facilitant ainsi les actions commerciales.
        """, unsafe_allow_html=True)
        
        # Fonctionnalit√©s cl√©s
        st.markdown('<div class="section-title">‚öôÔ∏è Fonctionnalit√©s cl√©s :</div>', unsafe_allow_html=True)
        st.markdown("""
        - Analyse des donn√©es √† partir d‚Äôun **fichier CSV** quasiment nettoy√©.
        - Transformations et modifications r√©alis√©es directement via **Power Query**.
        - Cr√©ation d‚Äôun tableau de bord interactif avec **Power BI**.
        - Actualisation quotidienne des donn√©es pour une gestion dynamique.
        """, unsafe_allow_html=True)
        
        # Organisation des Fichiers
        st.markdown('<div class="section-title">üóÇÔ∏è Organisation des Fichiers :</div>', unsafe_allow_html=True)
        st.markdown("""
        - **Documentation** :  
            - [PDF Explication du projet](https://github.com/david-b59/PROJECTS/blob/main/telecom-attrition-dashboard/documentation/Churn%20dans%20les%20t%C3%A9l%C3%A9coms.pdf)
        - **Fichier CSV** :  
            - [Donn√©es source](LIEN_A_INDIQUER)
        - **Dashboard Power BI** :  
            - [Fichier Power BI](https://github.com/david-b59/PROJECTS/blob/main/telecom-attrition-dashboard/power_bi/telecom.pbix)
        - **Screenshots** :  
            - [Screenshots du Dashboard](https://github.com/david-b59/PROJECTS/tree/main/telecom-attrition-dashboard/power_bi/screenshots)
        """, unsafe_allow_html=True)
        
        # Instructions d'utilisation
        st.markdown('<div class="section-title">üìñ Comment utiliser ce projet ?</div>', unsafe_allow_html=True)
        st.markdown("""
        - **√âtape 1** : Clonez le d√©p√¥t GitHub et ouvrez le projet.
        - **√âtape 2** : Consultez le fichier CSV et la documentation PDF pour comprendre les transformations appliqu√©es.
        - **√âtape 3** : Ouvrez le fichier Power BI pour explorer le dashboard interactif.
        """, unsafe_allow_html=True)
        
        # ------------------ Ajout d'un titre pour les screenshots ------------------
        st.markdown("<div class='section-title'>üñºÔ∏è D√©couvrez les screenshots du dashboard</div>", unsafe_allow_html=True)
        
        # URL de base pour les images sur GitHub (√† adapter ult√©rieurement)
        repo_url = "https://raw.githubusercontent.com/david-b59/PROJECTS/main/telecom-attrition-dashboard/power_bi/screenshots/"
        
        # Liste des noms de fichiers screenshots (ici, on suppose 10 images)
        image_paths = [f"screen{i}.PNG" for i in range(1, 6)]
        
        # Fonction pour charger les images depuis GitHub
        #@st.cache_data
        def load_images(image_paths):
            images = []
            for image_name in image_paths:
                image_url = f"{repo_url}{image_name}"
                response = requests.get(image_url)
                if response.status_code == 200:
                    try:
                        img = Image.open(BytesIO(response.content))
                        images.append(img)
                    except Exception as e:
                        st.warning(f"Erreur lors du chargement de l'image {image_name}: {e}")
                else:
                    st.warning(f"Impossible de charger l'image {image_name} (HTTP {response.status_code})")
            return images
        
        # Charger toutes les images
        images = load_images(image_paths)
        
        # V√©rifier si des images sont charg√©es
        if not images:
            st.error("Aucune image valide n'a pu √™tre charg√©e.")
        else:
            # Initialisation de l'index dans st.session_state
            if "index" not in st.session_state:
                st.session_state.index = 0
        
            # Boutons de navigation
            col1, col2, col3 = st.columns([1, 3, 1])
            with col1:
                if st.button("‚¨ÖÔ∏è Pr√©c√©dent"):
                    st.session_state.index = (st.session_state.index - 1) % len(images)
            with col3:
                if st.button("‚û°Ô∏è Suivant"):
                    st.session_state.index = (st.session_state.index + 1) % len(images)
            
            # Affichage de l'image courante
            index = st.session_state.index
            st.image(images[index], caption=f"Image {index + 1}", use_container_width=True)
        
        # Footer
        st.markdown(
            """
            <hr>
            <div style="text-align: center; color: #182C61; font-size: 0.9rem;">
                R√©alis√© par [Bauduin David].
            </div>
            """,
            unsafe_allow_html=True
        )


    elif st.session_state["selected_project"] == "cyclistique":

        # ------------------ 1) Titre et Style ------------------
        st.write("Projet choisi : Dashboard Cyclistic ‚Äì Analyse et Visualisation des Donn√©es 2021")
        
        # Couleurs et style CSS
        st.markdown(
            """
            <style>
            .title {
                font-size: 2rem;
                color: #3B3B98;
                font-weight: bold;
                text-align: center;
                margin-bottom: 20px;
            }
            .section-title {
                font-size: 1.5rem;
                color: #182C61;
                font-weight: bold;
                margin-bottom: 10px;
                margin-top: 30px;
            }
            .description {
                font-size: 1rem;
                color: #333333;
                text-align: justify;
                margin-bottom: 20px;
            }
            .highlight {
                color: #40739E;
                font-weight: bold;
            }
            </style>
            """, 
            unsafe_allow_html=True
        )
        
        # Titre principal
        st.markdown('<div class="title">üö¥‚Äç‚ôÄÔ∏è Dashboard Cyclistic ‚Äì Analyse et Visualisation des Donn√©es 2021</div>', unsafe_allow_html=True)
        
        # ------------------ 2) Description G√©n√©rale ------------------
        st.markdown(
            """
            <div class="description">
            Ce projet est le fruit d'une journ√©e de travail intensif dans le cadre d'un certificat blanc. 
            Il s'inscrit dans le cadre d'une √©tude de cas business visant √† analyser et visualiser les donn√©es 
            d'utilisation des v√©los de Cyclistic √† Chicago pour proposer des recommandations strat√©giques.
            </div>
            """, 
            unsafe_allow_html=True
        )
        
        # ------------------ 3) Contexte ------------------
        st.markdown('<div class="section-title">üèôÔ∏è Contexte :</div>', unsafe_allow_html=True)
        st.markdown(
            """
            Cyclistic est une entreprise de partage de v√©los √† Chicago disposant d'une flotte de 5 824 v√©los 
            r√©partis sur 692 stations. Le service est accessible via deux types de client√®le :
            
            - **Cyclistes occasionnels** : Pass pour une course ou une journ√©e compl√®te.
            - **Membres annuels** : Abonnement mensuel ou annuel.
            
            L‚Äôobjectif est de comprendre comment ces deux groupes utilisent les v√©los, afin de convertir 
            davantage de cyclistes occasionnels en membres annuels et de rep√©rer les emplacements strat√©giques 
            pour de nouvelles stations.
            """,
            unsafe_allow_html=True
        )
        
        # ------------------ 4) Objectifs de l'√âtude ------------------
        st.markdown('<div class="section-title">üéØ Objectifs de l‚Äô√âtude :</div>', unsafe_allow_html=True)
        st.markdown(
            """
            1. **Usage diff√©renci√©** : Comment les membres annuels et les cyclistes occasionnels utilisent-ils 
               diff√©remment les v√©los ?
            2. **Conversion** : Identifier les leviers pour convertir les cyclistes occasionnels en membres annuels.
            3. **Strat√©gie digitale** : Exploiter les m√©dias num√©riques pour am√©liorer le taux de conversion.
            4. **Nouvelles stations** : D√©terminer les emplacements id√©aux pour implanter de nouvelles stations, 
               en fonction des habitudes d‚Äôutilisation et de la fr√©quentation.
            """,
            unsafe_allow_html=True
        )
        
        # ------------------ 5) Data & M√©thodologie ------------------
        st.markdown('<div class="section-title">üîé Data & M√©thodologie :</div>', unsafe_allow_html=True)
        st.markdown(
            """
            - **Collecte des Donn√©es** :  
              - Fichiers CSV publics provenant de Divvy Tripdata (serveur AWS), couvrant l‚Äôann√©e 2021.
            - **Pr√©-traitement & Traitement** :  
              - Nettoyage et suppression des trajets probl√©matiques.  
              - Ajout de colonnes (dur√©e, heure de d√©part, etc.) pour enrichir l‚Äôanalyse.  
              - Code de pr√©traitement et d‚Äôanalyse dans un notebook <em>Google Colab</em> (voir le d√©p√¥t GitHub).
            - **Analyse et Visualisation** :  
              - Cr√©ation d‚Äôun dataset propre pour <strong>Power BI</strong>.  
              - Conception d‚Äôun tableau de bord interactif avec cartes g√©ographiques et tableaux crois√©s dynamiques.
            """,
            unsafe_allow_html=True
        )
        
        # ------------------ 6) Livrables ------------------
        st.markdown('<div class="section-title">üìÇ Livrables :</div>', unsafe_allow_html=True)
        st.markdown(
            """
            - **Documentation** :  
              - [Pr√©sentation (PDF)](https://github.com/david-b59/PROJECTS/tree/main/Cyclistic-ashboard/documentation) exposant la m√©thodologie, les insights cl√©s et les recommandations.
            - **Notebook Google Colab** :  
              - [Fichier .ipynb](https://github.com/david-b59/PROJECTS/tree/main/Cyclistic-ashboard/notebook) pr√©sentant le nettoyage et l‚Äôanalyse exploratoire.
            - **Fichier Power BI** :  
              - [Fichier .pbit ou .pbix](https://github.com/david-b59/PROJECTS/blob/main/Cyclistic-ashboard/power_bi/certification-blanc-david.pbit) pour visualiser et interagir avec le dashboard.
            - **Screenshots** :  
              - [Captures d‚Äô√©cran](https://github.com/david-b59/PROJECTS/tree/main/Cyclistic-ashboard/power_bi/screenshots) du tableau de bord Power BI disponibles dans le dossier `power_bi/screenshots`.
            """,
            unsafe_allow_html=True
        )
        
        # ------------------ 7) Instructions d‚ÄôUtilisation ------------------
        st.markdown('<div class="section-title">‚öôÔ∏è Instructions d‚ÄôUtilisation :</div>', unsafe_allow_html=True)
        st.markdown(
            """
            1. **Cloner le D√©p√¥t** :  
               <pre><code class="language-bash">git clone https://github.com/david-b59/PROJECTS/tree/main/Cyclistic-dashboard</code></pre>
            2. **Analyse Exploratoire** :  
               - Ouvrez le notebook `.ipynb` dans Google Colab ou Jupyter pour examiner le processus de nettoyage et d‚Äôanalyse.
            3. **Pr√©parer le Dashboard Power BI** :  
               - Ouvrez le fichier `.pbit` ou `.pbix` dans Power BI Desktop.  
               - Si besoin, sp√©cifiez la source de donn√©es (fichier CSV nettoy√©) lorsque vous y √™tes invit√©.
            4. **Visualiser le Dashboard** :  
               - Une fois le fichier Power BI charg√©, interagissez avec les graphiques et consultez les diff√©rentes vues (cartes, tableaux crois√©s, etc.).
            """,
            unsafe_allow_html=True
        )
        
        # ------------------ 8) Diaporama des Screenshots ------------------
        st.markdown('<div class="section-title">üñºÔ∏è Aper√ßu du Dashboard (Screenshots)</div>', unsafe_allow_html=True)
        
        # URL de base pour les images sur GitHub
        repo_url = "https://raw.githubusercontent.com/david-b59/PROJECTS/main/Cyclistic-ashboard/power_bi/screenshots/"
        
        # Adaptez le nombre d'images et leur nom en fonction de votre d√©p√¥t
        # Par exemple, si vous avez 7 captures nomm√©es screen1.PNG, screen2.PNG, ...
        image_paths = [f"screen{i}.PNG" for i in range(1, 8)]
        
        @st.cache_data
        def load_images(image_paths):
            images = []
            for image_name in image_paths:
                image_url = f"{repo_url}{image_name}"
                response = requests.get(image_url)
                if response.status_code == 200:
                    try:
                        img = Image.open(BytesIO(response.content))
                        images.append(img)
                    except Exception as e:
                        st.warning(f"Erreur lors du chargement de l'image {image_name}: {e}")
                else:
                    st.warning(f"Impossible de charger l'image {image_name} (HTTP {response.status_code})")
            return images
        
        images = load_images(image_paths)
        
        if not images:
            st.error("Aucune image valide n'a pu √™tre charg√©e.")
        else:
            if "index_cyclistic" not in st.session_state:
                st.session_state.index_cyclistic = 0
        
            col1, col2, col3 = st.columns([1, 3, 1])
            with col1:
                if st.button("‚¨ÖÔ∏è Pr√©c√©dent", key="prev_cyclistic"):
                    st.session_state.index_cyclistic = (st.session_state.index_cyclistic - 1) % len(images)
            with col3:
                if st.button("‚û°Ô∏è Suivant", key="next_cyclistic"):
                    st.session_state.index_cyclistic = (st.session_state.index_cyclistic + 1) % len(images)
        
            index = st.session_state.index_cyclistic
            st.image(images[index], caption=f"Image {index + 1}", use_container_width=True)
        
        # ------------------ 9) Conclusion ------------------
        st.markdown('<div class="section-title">‚úÖ Conclusion</div>', unsafe_allow_html=True)
        st.markdown(
            """
            Ce projet a permis de mettre en √©vidence les diff√©rences d'utilisation des v√©los entre les cyclistes 
            occasionnels et les membres annuels. Les insights cl√©s issus de cette analyse fournissent des pistes 
            pour augmenter le taux de conversion vers l‚Äôabonnement annuel, ainsi que des recommandations sur 
            l‚Äôimplantation de nouvelles stations. Le dashboard interactif garantit une approche claire et 
            accessible pour tous les acteurs impliqu√©s.
            """,
            unsafe_allow_html=True
        )
        
        # ------------------ 10) Footer ------------------
        st.markdown(
            """
            <hr>
            <div style="text-align: center; color: #182C61; font-size: 0.9rem;">
                R√©alis√© par [Bauduin David].
            </div>
            """,
            unsafe_allow_html=True
        )

    
    elif st.session_state["selected_project"] == "cinema":
        st.write("Projet choisi : Project Recommandation Cinema")


        # CSS pour le design
        css = f'''
        <style>
            .stApp {{
                background-image: url("data:image/png;base64,{img_base64}");
                background-size: cover;
                background-attachment: fixed;
                background-repeat: no-repeat;
                background-position: center;
            }}
            .title {{
                font-size: 2rem;
                color: #3B3B98;
                font-weight: bold;
                text-align: center;
                margin-bottom: 20px;
            }}
            .section-title {{
                font-size: 1.5rem;
                color: #182C61;
                font-weight: bold;
                margin-bottom: 10px;
                margin-top: 30px;
            }}
            .description {{
                font-size: 1rem;
                color: #333333;
                text-align: justify;
                margin-bottom: 20px;
            }}
            .highlight {{
                color: #40739E;
                font-weight: bold;
            }}
        </style>
        '''
        st.markdown(css, unsafe_allow_html=True)

        # Titre principal
        st.markdown('<div class="title">üé• Projet : Moteur de Recommandation pour un Cin√©ma Local</div>', unsafe_allow_html=True)

        # Lien vers le projet
        st.markdown(
            '<div class="description">Lien vers le projet fini : <a href="https://projet-recommandation-cinema.streamlit.app/" target="_blank">https://projet-recommandation-cinema.streamlit.app/</a></div>',
            unsafe_allow_html=True
        )

        # Contexte du projet
        st.markdown('<div class="section-title">üåü Contexte :</div>', unsafe_allow_html=True)
        st.markdown('<div class="description">Un cin√©ma situ√© dans le <span class="highlight">Nord</span> souhaite revitaliser son activit√© en se digitalisant. Dans ce cadre, il a sollicit√© la cr√©ation d‚Äôun moteur de recommandation bas√© sur une base de donn√©es de films (<span class="highlight">IMDB et TMDB</span>) pour personnaliser les s√©ances et attirer un public local. Le projet se concentre sur les situations de <span class="highlight">cold start</span>, o√π aucune donn√©e utilisateur n‚Äôest disponible au d√©part.</div>', unsafe_allow_html=True)

        # Missions
        st.markdown('<div class="section-title">üéØ Missions :</div>', unsafe_allow_html=True)
        st.markdown(
            """
            - **√âtude de march√©** :
                - Analyse des habitudes cin√©matographiques dans la r√©gion de le Nord.
                - Identification des genres, p√©riodes ou autres caract√©ristiques pr√©f√©r√©es.
            - **Analyse des donn√©es** :
                - Exploration et nettoyage de la base IMDB et TMDB.
                - Analyse des tendances (acteurs les plus pr√©sents, dur√©es moyennes des films, p√©riodes populaires, films les mieux not√©s).
                - Identification des caract√©ristiques influen√ßant les recommandations.
            - **Cr√©ation d‚Äôun syst√®me de recommandation** :
                - D√©veloppement d‚Äôun mod√®le bas√© sur des algorithmes de machine learning.
                - D√©monstration de la recommandation sur une s√©lection de films propos√©e par le client.
            - **Pr√©sentation des r√©sultats** :
                - Construction d‚Äôun tableau de bord interactif pour afficher les KPI pertinents.
        - Cr√©ation d‚Äôune pr√©sentation synth√©tique expliquant la d√©marche, les outils utilis√©s, les difficult√©s rencontr√©es, et les pistes d‚Äôam√©lioration.
            """,
            unsafe_allow_html=True
        )

        # Livrables
        st.markdown('<div class="section-title">üì¶ Livrables :</div>', unsafe_allow_html=True)
        st.markdown(
            """
            - **Notebook d‚Äôanalyse et de nettoyage des donn√©es** :
                - Documentation compl√®te avec visualisations.
                - Justification des choix et conclusions.
            - **Dashboard interactif (Streamlit)** :
                - Pr√©sentation des KPI cl√©s :
                    - Films Fran√ßais.
                    - Genre Com√©die et Action.
                    - 5 derni√®re ann√©e (2020 √† 2024).
            """,
            unsafe_allow_html=True
        )

        # Technologies et outils
        st.markdown('<div class="section-title">üõ†Ô∏è Technologies et Outils :</div>', unsafe_allow_html=True)
        st.markdown(
            """
            - **Exploration et Analyse des donn√©es** : Python, Pandas, Matplotlib, Seaborn.
            - **Machine Learning** : Scikit-learn.
            - **Dashboard** : Streamlit.
            - **Base de donn√©es** : IMDB et TMDB (fichiers CSV).
            """,
            unsafe_allow_html=True
        )

        # R√©sultats attendus
        st.markdown('<div class="section-title">‚úÖ R√©sultats attendus :</div>', unsafe_allow_html=True)
        st.markdown(
            """
            Ce projet vise √† fournir une solution personnalis√©e et adapt√©e aux attentes locales en int√©grant une d√©marche analytique et technique robuste, et en offrant des outils pratiques pour le cin√©ma client.
            """,
            unsafe_allow_html=True
        )

        # Footer
        st.markdown(
            """
            <hr>
            <div style="text-align: center; color: #182C61; font-size: 0.9rem;">
                R√©alis√© par [Bauduin David].
            </div>
            """,
            unsafe_allow_html=True
        )
